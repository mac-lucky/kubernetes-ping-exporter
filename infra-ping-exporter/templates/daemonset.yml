apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: ping-exporter
  namespace: {{ .Values.namespace }}
spec:
  updateStrategy:
    type: {{ .Values.daemonset.updateStrategy.type }}
    rollingUpdate:
      maxUnavailable: {{ .Values.daemonset.updateStrategy.rollingUpdate.maxUnavailable }}
  selector:
    matchLabels:
      app: ping-exporter
  template:
    metadata:
      labels:
        app: ping-exporter
    spec:
      serviceAccountName: {{ .Values.serviceAccount.name }}
      containers:
      - name: ping-exporter
        image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        {{- if .Values.securityContext }}
        securityContext:
          {{- toYaml .Values.securityContext | nindent 10 }}
        {{- end }}
        env:
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: MY_POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: MY_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: CONFIG_MAP_NAME
          value: "ping-exporter-config"
        ports:
        - containerPort: {{ .Values.service.port }}
          name: {{ .Values.service.name }}
        {{- if .Values.resources }}
        resources:
          {{- toYaml .Values.resources | nindent 10 }}
        {{- end }}
      restartPolicy: Always
      {{- if .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml .Values.nodeSelector | nindent 8 }}
      {{- end }}
      {{- if .Values.tolerations }}
      tolerations:
        {{- toYaml .Values.tolerations | nindent 8 }}
      {{- end }}
      {{- if .Values.affinity }}
      affinity:
        {{- toYaml .Values.affinity | nindent 8 }}
      {{- end }}